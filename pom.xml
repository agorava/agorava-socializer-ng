<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2013 Agorava
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>agorava-socializer2</artifactId>
    <packaging>war</packaging>
    <name>Agorava Socializer 2.0</name>
    <groupId>org.agorava</groupId>
    <version>0.7.0</version>
    <description>Demonstration of Agorava in a Java EE application.</description>
    <url>http://agorava.org</url>
    <inceptionYear>2013</inceptionYear>

    <developers>
        <developer>
            <name>Antoine Sabot-Durand</name>
            <email>antoine@sabot-durand.net</email>
            <timezone>CET</timezone>
            <roles>
                <role>Project Lead</role>
            </roles>
        </developer>
        <developer>
            <name>Paul Dijou</name>
            <email>paul.dijou+dev@gmail.com</email>
            <timezone>CET</timezone>
            <roles>
                <role>JavaScript turtle</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.agorava>0.7.0</version.agorava>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-web-7.0</artifactId>
                <version>1.0.0.Beta2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- Import Agorava off course -->
        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-core-api</artifactId>
            <version>${version.agorava}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-core-impl-cdi</artifactId>
            <version>${version.agorava}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
            <version>3.0.1</version>
        </dependency>


        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-twitter-api</artifactId>
            <version>${version.agorava}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-twitter-cdi</artifactId>
            <version>${version.agorava}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-facebook-api</artifactId>
            <version>${version.agorava}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-facebook-cdi</artifactId>
            <version>${version.agorava}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-linkedin-api</artifactId>
            <version>${version.agorava}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.agorava</groupId>
            <artifactId>agorava-linkedin-cdi</artifactId>
            <version>${version.agorava}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>


    <build>
        <!-- Maven will append the version to the finalName (which is the 
            name given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources/local</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to 
                        catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- The Wildfly plugin deploys your war to a local wildfly
                container  or start an embedded one-->
            <!-- To use, run: mvn package wildfly:run or mvn package wildfly:deploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.0.Beta1</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be 
                used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization 
                your app will need. -->
            <!-- By default that is to put the resulting archive into the 
                'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.1.1</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>resin</id>
            <dependencies>
                <dependency>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                    <version>3.15.0-GA</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

    <scm>
        <connection>scm:git:git://github.com/agorava/agorava-socializer-20.git</connection>
        <developerConnection>scm:git:git@github.com:agorava/agorava-socializer-20.git</developerConnection>
        <url>https://github.com/agorava/agorava-socializer-20</url>
        <tag>HEAD</tag>
    </scm>
</project>
